openapi: "3.0.0"
info:
  title: "API documentation"
  version: "1.0.0"
  description: "API documentation list"
  contact:
    email: aniruddhparwal@gmail.com

# servers:
#   - url: "https://localhost:4000/api/v1"
#     description: Main Server
#   - url: "http://localhost:4000/api/v1"
#     description: Development Server

servers:
  - url: "{protocol}://localhost:4000/api/{version}"
    description: Main Server
    variables:
      version:
        default: "v1"
        enum:
          - v1
          - v2
      protocol:
        default: "http"
        enum:
          - http
          - https

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: Authorization
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /ani:
    get:
      tags:
        - Ani
      summary: "return grete Ani"
      responses:
        200:
          description: "Successfull Operation"
          content:
            application/json:
              schema:
                type: string
                expample: "Aniruddh"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                expample: "Bad Request"

        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                expample: "Internal Server Error"

  /aniObject:
    get:
      tags:
        - Object
      summary: "Return Object"
      responses:
        200:
          description: "Successfull Operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Aniruddh"
                  price:
                    type: number
                    example: "25"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                expample: "Bad Request"

        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                expample: "Internal Server Error"

  /courses:
    get:
      tags:
        - Courses
      summary: "Return all couses"
      responses:
        200:
          description: "Successfull Operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Aniruddh"
                    price:
                      type: number
                      example: "25"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                expample: "Bad Request"

        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                expample: "Internal Server Error"

  /mycourse/{courseId}:
    get:
      tags:
        - Ani
      summary: "Return course based on id"
      parameters:
        - name: courseId
          in: path
          description: "Course Id"
          required: true
          default: 11
          schema:
            type: string

      responses:
        200:
          description: "Successfull Operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Aniruddh"
                  price:
                    type: number
                    example: "25"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                expample: "Bad Request"

        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                expample: "Internal Server Error"

  /addcourse:
    post:
      tags:
        - Ani
      summary: "add new course"
      consumes:
        - application/json
      produces:
        - application/json

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: "Aniruddh"
                price:
                  type: number
                  example: "25"

      responses:
        200:
          description: "Successfull Operation"
          content:
            application/json:
              schema:
                type: boolean

        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                expample: "Bad Request"

        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                expample: "Internal Server Error"

  /coursequery:
    get:
      tags:
        - Courses
      summary: "try to learn about query"
      parameters:
        - name: location
          in: query
          description: "location"
          required: true
          schema:
            type: string
            enum: [delhi, london, indore]
        - name: device
          in: query
          description: "device"
          required: true
          schema:
            type: string
            enum: [web, mobile]
      responses:
        200:
          description: "Successfull Operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                    example: "delhi"
                  device:
                    type: string
                    example: "web"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                expample: "Bad Request"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                expample: "Internal Server Error"

  /courseupload:
    post:
      tags:
        - Courses
      summary: "Uploading Course Image"
      parameters:
        - name: auth
          in: header
          description: "file"
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: "Successfull Operation"
          content:
            application/json:
              schema:
                type: boolean

        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                expample: "Bad Request"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                expample: "Internal Server Error"
